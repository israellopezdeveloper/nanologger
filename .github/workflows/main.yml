name: CI Main Branch

on:
  push:
    branches:
      - main

jobs:
  debian:
    name: Generate Debian package
    runs-on: ubuntu-latest
    container:
      image: lopoeisr/make-gcc:debian-bookworm_GCC-14_20241126103520
      options: --user root
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create package
      run: make && make package-deb
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nanologger.deb
        path: "*.deb"
  arch:
    name: Generate Arch package
    runs-on: ubuntu-latest
    container:
      image: lopoeisr/arch-make:arch-20241126103520
      options: --user root
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create package
      run: |
          sudo chown -R developer:developer .
          sudo -u developer make 
          sudo -u developer make package-arch
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nanologger.pkg.tar.zst
        path: "*.pkg.tar.zst"
  rpm:
    name: Generate RPM package
    runs-on: ubuntu-latest
    container:
      image: lopoeisr/rpm-make:fedora-41_20241126103520
      options: --user root
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Create package
      run: make && make package-rpm
    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: nanologger.rpm
        path: "*.rpm"
  create-release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    needs: [arch,debian,rpm]
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: true
        fetch-depth: 0
        recursive: true
    - name: Get version number
      run: |
        echo "VERSION=$(cat version.txt)" >> $GITHUB_ENV
    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.VERSION }}
        release_name: Release ${{ env.VERSION }}
        body: |
          Release for ${{ env.VERSION }}
          - Arch package
          - Debian/Ubuntu package
          - RPM package
    - name: Download Arch package
      uses: actions/download-artifact@v3
      with:
        name: nanologger.pkg.tar.zst
    - name: Download Debian package
      uses: actions/download-artifact@v3
      with:
        name: nanologger.deb
    - name: Download RPM package
      uses: actions/download-artifact@v3
      with:
        name: nanologger.rpm
    - name: list
      run: ls -l
    - name: Upload Arch package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nanologger.pkg.tar.zst
        asset_name: nanologger-${{ env.VERSION }}.pkg.tar.zst
        asset_content_type: application/gzip
    - name: Upload Debian package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nanologger.deb
        asset_name: nanologger-${{ env.VERSION }}.deb
        asset_content_type: application/deb
    - name: Upload RPM package to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./nanologger.rpm
        asset_name: nanologger-${{ env.VERSION }}.rpm
        asset_content_type: application/rpm

